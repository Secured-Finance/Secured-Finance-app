name: Build Web App and Storybook
on:
  workflow_call:
    inputs:
      artifact_name:
        required: true
        type: string
      environment_name:
        required: true
        type: string
      ref:
        description: 'The branch or tag ref to checkout. Default is the branch that triggered the workflow.'
        default: ''
        required: false
        type: string
    secrets:
      PAT:
        required: true
      CODECOV_TOKEN:
        required: true
      CHROMATIC_PROJECT_TOKEN:
        required: true
      ALCHEMY_API_KEY:
        required: true
      AMPLITUDE_API_KEY:
        required: true

jobs:
  build-and-test-all:
    name: Build and Test
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_name }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci
        env:
          NPM_AUTH_TOKEN: ${{ secrets.PAT }}

      - run: |
          cat <<EOF > .env.local
          NEXT_PUBLIC_ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }}
          NEXT_PUBLIC_AMPLITUDE_API_KEY=${{ secrets.AMPLITUDE_API_KEY }}
          SF_ENV=${{ vars.SF_ENV }}
          NEXT_PUBLIC_WFIL_CONTRACT_ADDRESS=${{ vars.TOKEN_WFIL }}
          NEXT_PUBLIC_USDC_CONTRACT_ADDRESS=${{ vars.TOKEN_USDC }}
          NEXT_PUBLIC_WBTC_CONTRACT_ADDRESS=${{ vars.TOKEN_WBTC }}
          NEXT_PUBLIC_USE_PACKAGE_VERSION=${{ vars.USE_PACKAGE_VERSION }}
          EOF

      - name: Check Syntax with Prettier
        run: npm run prettier:check

      - name: Check Style with ESLint
        run: npm run lint:check

      - name: Run Tests
        run: npm run test:cov

      - name: Upload Code Coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit-tests
          files: './coverage/coverage-final.json'

      - name: Build Web App
        run: npm run build

      - name: Build Storybook
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

      - name: Publish Web App
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact_name }}
          path: build
          retention-days: 10
          if-no-files-found: error

      - name: Analyze bundle
        run: npx -p nextjs-bundle-analysis report

      - name: Upload bundle
        uses: actions/upload-artifact@v3
        with:
          name: bundle
          path: .next/analyze/__bundle_analysis.json

      - name: Download base branch bundle stats
        uses: dawidd6/action-download-artifact@v2
        if: success() && github.event.number
        with:
          workflow: nextjs_bundle_analysis.yml
          branch: ${{ github.event.pull_request.base.ref }}
          path: .next/analyze/base

      # And here's the second place - this runs after we have both the current and
      # base branch bundle stats, and will compare them to determine what changed.
      # There are two configurable arguments that come from package.json:
      #
      # - budget: optional, set a budget (bytes) against which size changes are measured
      #           it's set to 350kb here by default, as informed by the following piece:
      #           https://infrequently.org/2021/03/the-performance-inequality-gap/
      #
      # - red-status-percentage: sets the percent size increase where you get a red
      #                          status indicator, defaults to 20%
      #
      # Either of these arguments can be changed or removed by editing the `nextBundleAnalysis`
      # entry in your package.json file.
      - name: Compare with base branch bundle
        if: success() && github.event.number
        run: ls -laR .next/analyze/base && npx -p nextjs-bundle-analysis compare

      - name: Get Comment Body
        id: get-comment-body
        if: success() && github.event.number
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        run: |
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$(cat .next/analyze/__bundle_analysis_comment.txt)" >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '<!-- __NEXTJS_BUNDLE -->'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v2
        if: success() && github.event.number && steps.fc.outputs.comment-id == 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}

      - name: Update Comment
        uses: peter-evans/create-or-update-comment@v2
        if: success() && github.event.number && steps.fc.outputs.comment-id != 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
